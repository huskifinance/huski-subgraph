// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class PriceOracle__getPriceResult {
  value0: BigInt;
  value1: BigInt;

  constructor(value0: BigInt, value1: BigInt) {
    this.value0 = value0;
    this.value1 = value1;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromUnsignedBigInt(this.value0));
    map.set("value1", ethereum.Value.fromUnsignedBigInt(this.value1));
    return map;
  }
}

export class PriceOracle extends ethereum.SmartContract {
  static bind(address: Address): PriceOracle {
    return new PriceOracle("PriceOracle", address);
  }

  getPrice(token0: Address, token1: Address): PriceOracle__getPriceResult {
    let result = super.call(
      "getPrice",
      "getPrice(address,address):(uint256,uint256)",
      [ethereum.Value.fromAddress(token0), ethereum.Value.fromAddress(token1)]
    );

    return new PriceOracle__getPriceResult(
      result[0].toBigInt(),
      result[1].toBigInt()
    );
  }

  try_getPrice(
    token0: Address,
    token1: Address
  ): ethereum.CallResult<PriceOracle__getPriceResult> {
    let result = super.tryCall(
      "getPrice",
      "getPrice(address,address):(uint256,uint256)",
      [ethereum.Value.fromAddress(token0), ethereum.Value.fromAddress(token1)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PriceOracle__getPriceResult(value[0].toBigInt(), value[1].toBigInt())
    );
  }
}
